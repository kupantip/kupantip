name: Docker Image CI

on:
    push:
        branches: [ "main", "deployment-setup" ]
    workflow_dispatch:

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
            - name: üö® Checkout Repo
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USER }}
                password: ${{ secrets.DOCKER_TOKEN }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Images & Tag & push Backend
              uses: docker/build-push-action@v6
              with:
                context: ./backend
                push: true
                tags: ${{ secrets.DOCKER_USER }}/kupantip-backend:latest
              # run: |
              #   docker compose build

            # - name: Tag & push Backend
            #   run: |
            #     docker tag kupantip-backend:latest ${{ secrets.DOCKER_USER }}/kupantip-backend:latest
            #     docker push ${{ secrets.DOCKER_USER }}/kupantip-backend:latest

            # - name: Tag & push Frontend
            #   run: |
            #     docker tag kupantip-frontend:latest ${{ secrets.DOCKER_USER }}/kupantip-frontend:latest
            #     docker push ${{ secrets.DOCKER_USER }}/kupantip-frontend:latest

    deploy:
        needs: build
        runs-on: self-hosted

        steps:
            - name: üö® Checkout Repo
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USER }}
                password: ${{ secrets.DOCKER_TOKEN }}

            - name: Write .env file
              shell: bash
              run: |
                printf '%s' "${{ secrets.BACKEND_ENV }}" > backend/.env
                chmod 600 backend/.env

            - name: Deploy Backend
              shell: bash
              run: |
                set -euo pipefail

                # Start or update the backend service
                docker compose -f deploy.yml pull backend
                docker compose -f deploy.yml up -d --pull always backend

                # Get the container id for the backend service
                CID="$(docker compose -f deploy.yml ps -q backend)"
                if [ -z "${CID}" ]; then
                  echo "‚ùå Could not find backend container id"
                  docker compose -f deploy.yml logs backend || true
                  exit 1
                fi

                echo "‚è≥ Waiting for backend healthcheck..."
                # Wait up to ~90s for health=healthy
                for i in {1..30}; do
                  # Running state
                  RUNNING="$(docker inspect -f '{{.State.Running}}' "$CID" || echo 'false')"
                  if [ "$RUNNING" != "true" ]; then
                    echo "‚ùå Container is not running"
                    docker compose -f deploy.yml logs backend || true
                    exit 1
                  fi

                  # Health state (may not exist immediately)
                  HEALTH="$(docker inspect -f '{{if .State.Health}}{{.State.Health.Status}}{{else}}none{{end}}' "$CID" || echo 'none')"
                  case "$HEALTH" in
                    healthy)
                      echo "‚úÖ Backend is healthy"
                      exit 0
                      ;;
                    unhealthy)
                      echo "‚ùå Backend is unhealthy"
                      docker compose -f deploy.yml logs backend || true
                      exit 1
                      ;;
                    none)
                      # no healthcheck yet; keep waiting
                      ;;
                    *)
                      # starting, etc.; keep waiting
                      ;;
                  esac

                  sleep 3
                done

                echo "‚ùå Timed out waiting for backend to become healthy"
                docker compose -f deploy.yml logs backend || true
                exit 1

